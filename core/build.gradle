plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        //lets suppose api key is same for all build types and this way we can make it common for
        // all build types
        buildConfigField "String", "API_KEY", "\"65df3121549a9bde0f67ac2e4e35d24f\""

    }

    signingConfigs {
        release {
            keyAlias 'weatherapp'
            keyPassword 'Qwerty@1122'
            storePassword 'Qwerty@1122'
            storeFile file('../keystore/weather-release.jks')
        }
    }

    buildTypes {

        debug {
            debuggable true
            //we can change BuildConfig fields as per build types. For now all are same
            buildConfigField "String", "API_URL", "\"https://api.openweathermap.org/data/2.5/\""
        }
        staging {
            //we can change BuildConfig fields as per build types. For now all are same
            buildConfigField "String", "API_URL", "\"https://api.openweathermap.org/data/2.5/\""
        }

        release {
            signingConfig signingConfigs.release

            //we can change BuildConfig fields as per build types. For now all are same
            buildConfigField "String", "API_URL", "\"https://api.openweathermap.org/data/2.5/\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    //implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //---------------dagger2-------------------------------------------
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // --------- retrofit2 -------------------------------------------
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    //Json deserialization
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //Logging interceptor
    api "com.squareup.okhttp3:logging-interceptor:$retrofit_logging_version"


    def room_version = "2.2.6"
    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    api "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
}